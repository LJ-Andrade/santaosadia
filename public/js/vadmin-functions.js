!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=9)}({10:function(e,t){function n(e,t){swal(e,t,"error")}$.ajaxSetup({headers:{"X-CSRF-TOKEN":$('meta[name="csrf-token"]').attr("content")}}),$(document).on("click",".List-Checkbox",function(e){e.stopPropagation();var t,n=[];$(".List-Checkbox:checked").each(function(){n.push($(this).attr("data-id")),$("#RowsToDeletion").val(n)}),1==n.length?$("#EditId").val(n):n.length<1?$("#EditId").val(""):(n.length,$("#EditId").val("")),1==(t=$(".List-Checkbox:checkbox:checked").length)?($(".DeleteBtn").removeClass("Hidden"),$(".EditBtn").removeClass("Hidden")):t>=2?$(".EditBtn").addClass("Hidden"):0==t&&($(".DeleteBtn").addClass("Hidden"),$(".EditBtn").addClass("Hidden")),$(this).prop("checked")?$(this).parent().parent().parent().addClass("row-selected"):$(this).parent().parent().parent().removeClass("row-selected")}),$(document).scroll(function(e){$(window).scrollTop()>150?($(".DeleteBtn").css({position:"fixed",bottom:"50px",right:"10px","z-index":"999"}),$(".EditBtn").css({position:"fixed",bottom:"50px",right:"130px","z-index":"999"})):($(".DeleteBtn").css({position:"relative",bottom:"auto",right:"auto","z-index":"999"}),$(".EditBtn").css({position:"relative",bottom:"auto",right:"auto","z-index":"999"}))}),$("#TableList tbody .CheckBoxes").find('input[type="checkbox"]').each(function(){$(this).prop("checked",!1)}),deleteRecord=function(e,t,o,r){swal({title:o,text:r,type:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"ELIMINAR",cancelButtonText:"Cancelar",confirmButtonClass:"btn btnGreen",cancelButtonClass:"btn btnRed",buttonsStyling:!1}).then(function(){$.ajax({url:t,method:"POST",dataType:"JSON",data:{id:e},beforeSend:function(){},success:function(t){if($("#BatchDeleteBtn").addClass("Hidden"),1==t.success){for($("#Id"+e).hide(200),i=0;i<e.length;i++)$("#Id"+e[i]).hide(200);return swal("Ok!","Eliminación completa","success"),console.log(t),!0}return n("Ups!","Ha ocurrido un error (Puede que este registro tenga relación con otros items en el sistema). Debe eliminar primero los mismos."),console.log(t),!1},error:function(e){$("#Error").html(e.responseText),console.log(e)},complete:function(){}})})},deleteAndReload=function(e,t,o,r){swal({title:o,text:r,type:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"ELIMINAR",cancelButtonText:"Cancelar",confirmButtonClass:"btn btnGreen",cancelButtonClass:"btn btnRed",buttonsStyling:!1}).then(function(){$.ajax({url:t,method:"POST",dataType:"JSON",data:{id:e},beforeSend:function(){},success:function(e){if($("#BatchDeleteBtn").addClass("Hidden"),1!=e.success)return n("Ups!","Ha ocurrido un error (Puede que este registro tenga relación con otros items en el sistema). Debe eliminar primero los mismos."),console.log(e),!1;location.reload()},error:function(e){$("#Error").html(e.responseText),console.log(e)}})})}},9:function(e,t,n){e.exports=n(10)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,